
import java.sql.SQLException;
import java.util.ArrayList;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

public class DataDbExemple extends javax.swing.JFrame {

    DefaultTableModel model; //tabloyu degistirmek icin default table model den 
    //nesne olusturuyorum
    ArrayList AllFilds = new ArrayList();

    public DataDbExemple() {
        initComponents();
        populateTable();
    }

    public int getIdInTable() {
        try {
            int roww = tblCities.convertRowIndexToModel(tblCities.getSelectedRow());//tablodan secilen index
            int SelectedIdColumn = (Integer) tblCities.getValueAt(roww, 0);//secilen indexin Id yani DB deki IDsi
            return SelectedIdColumn;
        } catch (Exception e) {
            int roww = tblCities.convertRowIndexToModel(tblCities.getSelectedRow());//tablodan secilen index
            int SelectedIdColumn = (Integer) tblCities.getValueAt(0, 0);//secilen indexin Id yani DB deki IDsi
            return SelectedIdColumn;

        }

    }

    public String[] getAllFilds() {
        int roww = tblCities.convertRowIndexToModel(tblCities.getSelectedRow());//tablodan secilen index
        String ChoosedName = (String) tblCities.getValueAt(roww, 1);
        String ChoosedCountryCode = (String) tblCities.getValueAt(roww, 2);
        String ChoosedDistrict = (String) tblCities.getValueAt(roww, 3);
        //String ChoosedPopulation= (String)tblCities.getValueAt(roww, 4);
        String[] filds = new String[]{ChoosedName, ChoosedCountryCode, ChoosedDistrict};
        AllFilds.add(1, ChoosedName);
        AllFilds.add(2, ChoosedCountryCode);
        AllFilds.add(3, ChoosedDistrict);

        return filds;
    }

    public Integer getPopulation() {
        int roww = tblCities.convertRowIndexToModel(tblCities.getSelectedRow());
        Integer ChoosedPopulation = (Integer) tblCities.getValueAt(roww, 4);
        return ChoosedPopulation;

    }

    public void populateTable() {// tabloyu doldurma işlemi
        model = (DefaultTableModel) tblCities.getModel();//tip donusumu yapıyorum
        model.setRowCount(0);
        try {
            ArrayList<City> cities = getCities();//alt taraftaki fonksiyon calıstı

            for (City city : cities) {
                Object[] rowData = {
                    city.getId(),
                    city.getName(),
                    city.getCountrycode(),
                    city.getDistrict(),
                    city.getPopulation()};
                model.addRow(rowData);
            }
        } catch (SQLException ex) {

        }

    }

    public ArrayList<City> getCities() throws SQLException {//databaseden verileri cekmek.
        DBhelper dBhelper = new DBhelper();
        Connection connection = null;
        Statement statement = null;
        ResultSet resultSet;
        ArrayList<City> cities = null;

        try {
            connection = dBhelper.getConnection(); //baglanma ıslemı
            statement = connection.createStatement();
            resultSet = statement.executeQuery("Select * from city");//sql sorgusu
            cities = new ArrayList<City>();
            while (resultSet.next()) {//her bir sehir icin
                cities.add(new City( //cities e ekle
                        resultSet.getInt("ID"),
                        resultSet.getString("Name"),
                        resultSet.getString("CountryCode"),
                        resultSet.getString("District"),
                        resultSet.getInt("Population")
                ));
            }

        } catch (SQLException exception) {
            dBhelper.showExeption(exception);//dbhelpere exeption ı gonderdim
        } finally {//baglantıı kapattım
            connection.close();
            statement.close();

        }

        return cities;//arraylist<City> olanı da fonksiyonda dondurdum.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCities = new javax.swing.JTable();
        txtBoxSerach = new javax.swing.JTextField();
        lblSerch = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtCountrCode = new javax.swing.JTextField();
        txtDistrict = new javax.swing.JTextField();
        txtPopulation = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblResult = new javax.swing.JLabel();
        btnChoosDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnChoose = new javax.swing.JButton();
        lblCreator = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblCities.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "CountryCode", "District", "Popilation"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCities);
        if (tblCities.getColumnModel().getColumnCount() > 0) {
            tblCities.getColumnModel().getColumn(0).setResizable(false);
            tblCities.getColumnModel().getColumn(1).setResizable(false);
            tblCities.getColumnModel().getColumn(2).setResizable(false);
            tblCities.getColumnModel().getColumn(3).setResizable(false);
            tblCities.getColumnModel().getColumn(4).setResizable(false);
        }

        txtBoxSerach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBoxSerachActionPerformed(evt);
            }
        });
        txtBoxSerach.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBoxSerachKeyPressed(evt);
            }
        });

        lblSerch.setText("Search : ");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Name");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("CountrCode");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        txtDistrict.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDistrictActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("District");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Population");

        btnChoosDelete.setBackground(new java.awt.Color(255, 51, 51));
        btnChoosDelete.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnChoosDelete.setText("Choos Delete");
        btnChoosDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChoosDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnChoose.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnChoose.setText("Choose");
        btnChoose.setCursor(new java.awt.Cursor(java.awt.Cursor.E_RESIZE_CURSOR));
        btnChoose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseActionPerformed(evt);
            }
        });

        lblCreator.setText("Ceryunus");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblSerch)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtBoxSerach))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton1)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(40, 40, 40)
                                            .addComponent(jLabel1))
                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtName)
                                    .addComponent(txtCountrCode, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnChoose)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnUpdate))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel3))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtDistrict)
                                        .addComponent(txtPopulation, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(btnChoosDelete, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblResult)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(lblCreator))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtCountrCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtDistrict, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtPopulation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)))))
                    .addComponent(lblCreator))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(lblResult)
                    .addComponent(btnUpdate)
                    .addComponent(btnChoose))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtBoxSerach)
                        .addComponent(btnChoosDelete))
                    .addComponent(lblSerch, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBoxSerachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBoxSerachActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBoxSerachActionPerformed

    private void txtBoxSerachKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBoxSerachKeyPressed

        String serachKey = txtBoxSerach.getText();
        TableRowSorter<DefaultTableModel> TableRowSorter = new TableRowSorter<DefaultTableModel>(model);
        tblCities.setRowSorter(TableRowSorter);
        TableRowSorter.setRowFilter(RowFilter.regexFilter(serachKey));


    }//GEN-LAST:event_txtBoxSerachKeyPressed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        String txtBoxName = txtName.getName();
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtDistrictActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDistrictActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDistrictActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DBhelper dbhelper = new DBhelper();
        Connection connection = null;
        PreparedStatement statement = null;
        ResultSet resultset;
        try {
            connection = dbhelper.getConnection();
            statement = connection.prepareStatement(
                    "insert into world.city(Name,CountryCode,District,Population) values(?,?,?,?);");

            statement.setString(1, txtName.getText());
            statement.setString(2, txtCountrCode.getText());
            statement.setString(3, txtDistrict.getText());
            statement.setInt(4, Integer.valueOf(txtPopulation.getText()));

            int result = statement.executeUpdate();
            System.out.println(result + " Klon eklendi !");
        } catch (SQLException e) {
            dbhelper.showExeption(e);
        } finally {
            try {
                connection.close();
            } catch (SQLException ex) {
                Logger.getLogger(DataDbExemple.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                statement.close();
            } catch (SQLException ex) {
                Logger.getLogger(DataDbExemple.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        populateTable();
        lblResult.setText("Kayit Basarili");
    }//GEN-LAST:event_jButton1ActionPerformed


    private void btnChoosDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChoosDeleteActionPerformed
        //int Id = tblCities.getSelectedRow();
        //int roww = tblCities.getSelectedColumn();
        int IdInTable = getIdInTable();
        DBhelper dbhelper = new DBhelper();
        Connection connection = null;
        PreparedStatement statement = null;
        try {
            connection = dbhelper.getConnection();
            String sql = "DELETE FROM world.city where ID=?;";
            statement = connection.prepareStatement(sql);
            statement.setInt(1, IdInTable); // parametre 
            System.out.println(IdInTable);
            int result = statement.executeUpdate();
            System.out.println(result + " Silindi!");
        } catch (SQLException e) {
            dbhelper.showExeption(e);
        } finally {
            try {
                connection.close();
            } catch (SQLException ex) {
                Logger.getLogger(DataDbExemple.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                statement.close();
            } catch (SQLException ex) {
                Logger.getLogger(DataDbExemple.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        populateTable();
        lblResult.setText("Kolon Silindi!");

    }//GEN-LAST:event_btnChoosDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        DBhelper dbhelper = new DBhelper();
        Connection connection = null;
        PreparedStatement statement = null;
        try {
            connection = dbhelper.getConnection();
            String sql = "update world.city set Name=?,CountryCode=?,District=?,Population=? where ID=?;";
            statement = connection.prepareStatement(sql);
            statement.setString(1, txtName.getText()); // parametre veriyoruz
            statement.setString(2, txtCountrCode.getText());
            statement.setString(3, txtDistrict.getText());
            statement.setInt(4, Integer.valueOf(txtPopulation.getText()));
            statement.setInt(5, (Integer) AllFilds.get(0));
            int result = statement.executeUpdate();
            System.out.println(result + " güncellendi!");
        } catch (SQLException e) {
            dbhelper.showExeption(e);
        } finally {
            try {
                connection.close();
                statement.close();
            } catch (SQLException ex) {
                Logger.getLogger(DataDbExemple.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        populateTable();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnChooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseActionPerformed
        int ChoosedId = getIdInTable();
        int population = getPopulation();
        System.out.println(population);
        AllFilds.add(0, ChoosedId);
        //AllFilds.add(4, population);
        String[] filds = getAllFilds();//return string array

        txtName.setText(filds[0]);
        txtCountrCode.setText(filds[1]);
        txtDistrict.setText(filds[2]);
        txtPopulation.setText(String.valueOf(population));

    }//GEN-LAST:event_btnChooseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DataDbExemple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DataDbExemple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DataDbExemple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataDbExemple.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DataDbExemple().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChoosDelete;
    private javax.swing.JButton btnChoose;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCreator;
    private javax.swing.JLabel lblResult;
    private javax.swing.JLabel lblSerch;
    private javax.swing.JTable tblCities;
    private javax.swing.JTextField txtBoxSerach;
    private javax.swing.JTextField txtCountrCode;
    private javax.swing.JTextField txtDistrict;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPopulation;
    // End of variables declaration//GEN-END:variables
}
